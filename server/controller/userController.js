import User from "../models/User.js";
import JobApplication from "../models/JobApplication.js";
import Job from "../models/Job.js";
import { v2 } from "cloudinary";

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getUserData = async (req, res) => {
  const clerkId = req.userId; // üëà –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ requireUser.js
  console.log("üîç Clerk ID:", clerkId);

  try {
    let user = await User.findOne({ clerkId });

    if (!user) {
      user = await User.create({
        clerkId,
        name: "–ñ–∞“£–∞ “õ–æ–ª–¥–∞–Ω—É—à—ã",
        email: "",
        resume: "",
      });
      console.log("‚úÖ –ñ–∞“£–∞ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã “õ“±—Ä—ã–ª–¥—ã:", user);
    }

    res.json({ success: true, user });
  } catch (error) {
    console.error("‚õî –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã “õ–∞—Ç–µ—Å—ñ:", error.message);
    res.json({ success: false, message: error.message });
  }
};

// üîπ –û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
export const applyForJob = async (req, res) => {
  const { jobId } = req.body;
  const clerkId = req.userId;

  try {
    const user = await User.findOne({ clerkId });
    if (!user) return res.json({ success: false, message: "–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã —Ç–∞–±—ã–ª–º–∞–¥—ã" });

    const isAlreadyApplied = await JobApplication.findOne({ userId: user._id, jobId });
    if (isAlreadyApplied) {
      return res.json({
        success: false,
        message: "–°—ñ–∑ –±“±–ª –∂“±–º—ã—Å“õ–∞ ”©—Ç—ñ–Ω—ñ—à –±–µ—Ä—ñ–ø “õ–æ–π“ì–∞–Ω—Å—ã–∑",
      });
    }

    const jobData = await Job.findById(jobId);
    if (!jobData) {
      return res.json({ success: false, message: "–ñ“±–º—ã—Å —Ç–∞–±—ã–ª–º–∞–¥—ã" });
    }

    await JobApplication.create({
      companyId: jobData.companyId,
      userId: user._id,
      jobId,
      date: Date.now(),
    });

    res.json({ success: true, message: "–°”ô—Ç—Ç—ñ “õ–æ–ª–¥–∞–Ω—ã–ª–¥—ã" });
  } catch (error) {
    res.json({ success: false, message: error.message });
  }
};

// üîπ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∫–ª–∏–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const getUserJobApplications = async (req, res) => {
  const clerkId = req.userId;

  try {
    const user = await User.findOne({ clerkId });
    if (!user) return res.json({ success: false, message: "–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã —Ç–∞–±—ã–ª–º–∞–¥—ã" });

    const applications = await JobApplication.find({ userId: user._id })
      .populate("companyId", "name email image")
      .populate("jobId", "title description location level salary")
      .exec();

    if (!applications) {
      return res.json({
        success: false,
        message: "–ë“±–ª –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã “Ø—à—ñ–Ω “õ–æ–ª–¥–∞–Ω–±–∞–ª–∞—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã",
      });
    }

    return res.json({ success: true, applications });
  } catch (error) {
    res.json({ success: false, message: error.message });
  }
};

// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ
export const updateUserResume = async (req, res) => {
  const clerkId = req.userId;

  try {
    const resumeFile = req.file;
    console.log("üìÑ Resume file:", resumeFile);

    const user = await User.findOne({ clerkId });
    if (!user) return res.json({ success: false, message: "–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã —Ç–∞–±—ã–ª–º–∞–¥—ã" });

    if (resumeFile) {
      const resumeUpload = await v2.uploader.upload(resumeFile.path);
      user.resume = resumeUpload.secure_url;
    }

    await user.save();
    return res.json({ success: true, message: "–†–µ–∑—é–º–µ —Å”ô—Ç—Ç—ñ –∂–∞“£–∞—Ä—Ç—ã–ª–¥—ã" });
  } catch (error) {
    res.json({ success: false, message: error.message });
  }
};
