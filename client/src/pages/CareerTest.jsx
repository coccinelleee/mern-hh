import React, { useState } from 'react';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';
import { motion } from 'framer-motion';

const questions = [
  {
    question: '“ö–∞–Ω–¥–∞–π –∂“±–º—ã—Å —Ç“Ø—Ä—ñ–Ω “±–Ω–∞—Ç–∞—Å—ã–∑?',
    answers: {
      '–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞–ª—ã“õ –∂–∞—Å–∞“õ—Ç–∞–º–∞ ”ô–∑—ñ—Ä–ª–µ—É': 3,
      '–î–∏–∑–∞–π–Ω –∂–∞—Å–∞—É': 2,
      '–°–∞–Ω–¥—ã“õ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥': 1,
    },
  },
  {
    question: '“ö–∞–Ω–¥–∞–π —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä “õ—ã–∑—ã“õ—Ç—ã—Ä–∞–¥—ã?',
    answers: {
      '–ñ–∞—Å–∞–Ω–¥—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç': 3,
      '–ë“±–ª—Ç—Ç—ã“õ –µ—Å–µ–ø—Ç–µ—É': 2,
      'IoT ”ô–∑—ñ—Ä–ª–µ—É': 1,
    },
  },
  {
    question: '“ö–∞–Ω–¥–∞–π –∂“±–º—ã—Å –æ—Ä—Ç–∞—Å—ã–Ω “õ–∞–ª–∞–π—Å—ã–∑?',
    answers: {
      '–ñ–µ–ª—ñ–ª—ñ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä': 3,
      '–ö–∏–±–µ—Ä“õ–∞—É—ñ–ø—Å—ñ–∑–¥—ñ–∫': 2,
      '–°–∞–ø–∞–Ω—ã “õ–∞–º—Ç–∞–º–∞—Å—ã–∑ –µ—Ç—É': 1,
    },
  },
  {
    question: '–ö–æ–º–∞–Ω–¥–∞–¥–∞ “õ–∞–Ω–¥–∞–π —Ä”©–ª–¥–µ –±–æ–ª“ì–∞–Ω “±–Ω–∞–π–¥—ã?',
    answers: {
      '–ë–∞—Å“õ–∞—Ä—É': 3,
      '”®–Ω—ñ–º–¥—ñ –±–∞—Å“õ–∞—Ä—É': 2,
      '–°–∞—Ç—ã–ª—ã–º –∏–Ω–∂–µ–Ω–µ—Ä–∏—è—Å—ã': 1,
    },
  },
  {
    question: '–ñ“±–º—ã—Å—Ç–∞ “õ–∞–Ω–¥–∞–π “õ–∞–±—ñ–ª–µ—Ç—Ç–µ—Ä—ñ“£—ñ–∑–¥—ñ –ø–∞–π–¥–∞–ª–∞–Ω“ì—ã“£—ã–∑ –∫–µ–ª–µ–¥—ñ?',
    answers: {
      '–¢–µ—Ö–Ω–∏–∫–∞–ª—ã“õ –∂–∞–∑–±–∞ –∂”ô–Ω–µ “õ“±–∂–∞—Ç—Ç–∞–º–∞': 3,
      '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥': 2,
      '–°–∞–Ω–¥—ã“õ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥': 1,
    },
  },
];

const CareerTest = () => {
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [scores, setScores] = useState({});
  const [showResults, setShowResults] = useState(false);

  const handleAnswer = (field, points) => {
    setScores(prevScores => ({
      ...prevScores,
      [field]: (prevScores[field] || 0) + points,
    }));

    if (currentQuestion + 1 < questions.length) {
      setCurrentQuestion(currentQuestion + 1);
    } else {
      setShowResults(true);
    }
  };

  const totalScore = Object.values(scores).reduce((acc, val) => acc + val, 0);

  const sortedResults = Object.entries(scores)
    .map(([field, score]) => ({
      field,
      percentage: Math.round((score / totalScore) * 100),
    }))
    .sort((a, b) => b.percentage - a.percentage);

  return (
    <>
      <Navbar />
      <div className="max-w-3xl mx-auto px-6 py-16">
        <motion.h2
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="text-3xl font-bold text-center text-blue-900 mb-6"
        >
          üß≠ IT –º–∞–º–∞–Ω–¥—ã“õ—Ç–∞—Ä –±–æ–π—ã–Ω—à–∞ –∫”ô—Å—ñ–ø—Ç—ñ–∫ –±–∞“ì–¥–∞—Ä–ª–∞—É —Ç–µ—Å—Ç—ñ
        </motion.h2>

        {!showResults ? (
          <motion.div
            key={currentQuestion}
            initial={{ opacity: 0, x: 50 }}
            animate={{ opacity: 1, x: 0 }}
            transition={{ duration: 0.5 }}
            className="bg-white shadow-xl rounded-xl p-6"
          >
            <h3 className="text-xl font-semibold mb-4">
              {questions[currentQuestion].question}
            </h3>
            <div className="space-y-3">
              {Object.entries(questions[currentQuestion].answers).map(([field, points]) => (
                <button
                  key={field}
                  onClick={() => handleAnswer(field, points)}
                  className="w-full text-left bg-blue-50 hover:bg-blue-100 text-blue-800 px-4 py-2 rounded-lg transition"
                >
                  {field}
                </button>
              ))}
            </div>
          </motion.div>
        ) : (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            className="bg-white shadow-xl rounded-xl p-6"
          >
            <h3 className="text-2xl font-semibold mb-4">‚úÖ –°—ñ–∑–¥—ñ“£ –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ“£—ñ–∑:</h3>
            <ul className="space-y-2">
              {sortedResults.map(({ field, percentage }) => (
                <li key={field} className="flex justify-between items-center">
                  <span className="font-medium">{field}</span>
                  <span className="text-blue-600 font-semibold">{percentage}%</span>
                </li>
              ))}
            </ul>
            <button
              onClick={() => {
                setCurrentQuestion(0);
                setScores({});
                setShowResults(false);
              }}
              className="mt-6 bg-green-500 text-white py-2 px-4 rounded-lg hover:bg-green-600 transition"
            >
              “ö–∞–π—Ç–∞–ª–∞—É üîÑ
            </button>
          </motion.div>
        )}
      </div>
      <Footer />
    </>
  );
};

export default CareerTest;
