import React, { useState, useEffect } from 'react';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';
import { motion, AnimatePresence } from 'framer-motion';
import CareerMap from '../components/CareerMap';
import careerMap from '../assets/career-map.png';

const questions = [
  {
    question: '–°—ñ–∑–≥–µ “õ–∞–Ω–¥–∞–π –∂“±–º—ã—Å —Ç“Ø—Ä—ñ “±–Ω–∞–π–¥—ã?',
    answers: {
      '–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞–ª—ã“õ –∂–∞—Å–∞“õ—Ç–∞–º–∞ ”ô–∑—ñ—Ä–ª–µ—É': 3,
      '–î–∏–∑–∞–π–Ω –∂–∞—Å–∞—É': 2,
      '–°–∞–Ω–¥—ã“õ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥': 1,
    },
  },
  {
    question: '“ö–∞–π —Å–∞–ª–∞–¥–∞“ì—ã —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä —Å—ñ–∑–≥–µ “õ—ã–∑—ã“õ—Ç—ã?',
    answers: {
      '–ñ–∞—Å–∞–Ω–¥—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç': 3,
      '–ë“±–ª—Ç—Ç—ã“õ –µ—Å–µ–ø—Ç–µ—É': 2,
      'IoT ”ô–∑—ñ—Ä–ª–µ—É': 1,
    },
  },
  {
    question: '–°—ñ–∑ “õ–∞–Ω–¥–∞–π –æ—Ä—Ç–∞–¥–∞ –∂–∞“õ—Å—ã –∂“±–º—ã—Å —ñ—Å—Ç–µ–π—Å—ñ–∑?',
    answers: {
      '–ñ–µ–ª—ñ–ª—ñ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä': 3,
      '–ö–∏–±–µ—Ä“õ–∞—É—ñ–ø—Å—ñ–∑–¥—ñ–∫': 2,
      '–°–∞–ø–∞–Ω—ã “õ–∞–º—Ç–∞–º–∞—Å—ã–∑ –µ—Ç—É': 1,
    },
  },
  {
    question: '–°—ñ–∑–≥–µ “õ–∞–π—Å—ã—Å—ã –∂–∞“õ—ã–Ω?',
    answers: {
      '”®–Ω—ñ–º–¥—ñ –±–∞—Å“õ–∞—Ä—É': 3,
      '–¢–µ—Ö–Ω–∏–∫–∞–ª—ã“õ –∂–∞–∑—É': 2,
      '–°–∞—Ç—ã–ª—ã–º –∏–Ω–∂–µ–Ω–µ—Ä–∏—è—Å—ã': 1,
    },
  },
  {
    question: '–°—ñ–∑–¥–µ “õ–∞–Ω–¥–∞–π “õ–∞–±—ñ–ª–µ—Ç—Ç–µ—Ä –±–∞—Ä?',
    answers: {
      '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞–ª—ã“õ –æ–π–ª–∞—É': 3,
      '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è': 2,
      '–®—ã“ì–∞—Ä–º–∞—à—ã–ª—ã“õ': 1,
    },
  },
  {
    question: '–°—ñ–∑ “Ø—à—ñ–Ω –º–∞–Ω—Å–∞–ø—Ç–∞ –Ω–µ –º–∞“£—ã–∑–¥—ã?',
    answers: {
      '–ñ–∞“£–∞—à—ã–ª —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä–º–µ–Ω –∂“±–º—ã—Å': 3,
      '–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä“ì–∞ –∫”©–º–µ–∫—Ç–µ—Å—É': 2,
      '–ö”ô—Å—ñ–±–∏ —Ç“±—Ä–∞“õ—Ç—ã–ª—ã“õ': 1,
    },
  },
];

const explanations = {
  '–ë–∞“ì–¥–∞—Ä–ª–∞–º–∞–ª—ã“õ –∂–∞—Å–∞“õ—Ç–∞–º–∞ ”ô–∑—ñ—Ä–ª–µ—É': '–°—ñ–∑ —Ç–µ—Ö–Ω–∏–∫–∞–ª—ã“õ –ª–æ–≥–∏–∫–∞ –º–µ–Ω —à–µ—à—ñ–º “õ–∞–±—ã–ª–¥–∞—É“ì–∞ –±–µ–π—ñ–º—Å—ñ–∑.',
  '–î–∏–∑–∞–π–Ω –∂–∞—Å–∞—É': '–°—ñ–∑–≥–µ —à—ã“ì–∞—Ä–º–∞—à—ã–ª—ã“õ –æ–π–ª–∞—É –º–µ–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å “õ“±—Ä—É “±–Ω–∞–π–¥—ã.',
  '–°–∞–Ω–¥—ã“õ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥': '–°—ñ–∑ –∞–¥–∞–º–¥–∞—Ä–º–µ–Ω –∂“±–º—ã—Å —ñ—Å—Ç–µ—É–¥—ñ, –∂–∞—Ä–Ω–∞–º–∞ –∂–∞—Å–∞—É–¥—ã “õ–∞–ª–∞–π—Å—ã–∑.',
  '–ñ–∞—Å–∞–Ω–¥—ã –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç': '–°—ñ–∑–≥–µ –¥–µ—Ä–µ–∫—Ç–µ—Ä–º–µ–Ω –∂“±–º—ã—Å —ñ—Å—Ç–µ—É –∂”ô–Ω–µ –∞–ª–≥–æ—Ä–∏—Ç–º–¥–µ—Ä “õ—ã–∑—ã“õ.',
  '–ë“±–ª—Ç—Ç—ã“õ –µ—Å–µ–ø—Ç–µ—É': '–°—ñ–∑ “Ø–ª–∫–µ–Ω –∂“Ø–π–µ–ª–µ—Ä–º–µ–Ω –∂“±–º—ã—Å —ñ—Å—Ç–µ–≥–µ–Ω–¥—ñ “±–Ω–∞—Ç–∞—Å—ã–∑.',
  'IoT ”ô–∑—ñ—Ä–ª–µ—É': '–°—ñ–∑ –∞–ø–ø–∞—Ä–∞—Ç—Ç—ã“õ “õ“±—Ä–∞–ª–¥–∞—Ä –º–µ–Ω “õ“±—Ä—ã–ª“ì—ã–ª–∞—Ä–¥—ã –±—ñ—Ä—ñ–∫—Ç—ñ—Ä—É–≥–µ –±–µ–π—ñ–º—Å—ñ–∑.',
  '–ñ–µ–ª—ñ–ª—ñ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–ª–∞—Ä': '–°—ñ–∑ –∏–Ω—Ñ—Ä–∞“õ“±—Ä—ã–ª—ã–º–¥—ã “õ–æ–ª–¥–∞—É“ì–∞ –∂”ô–Ω–µ –∂“Ø–π–µ–ª–µ—Ä–≥–µ –∂–∞—É–∞–ø—Ç—ã—Å—ã–∑.',
  '–ö–∏–±–µ—Ä“õ–∞—É—ñ–ø—Å—ñ–∑–¥—ñ–∫': '–°—ñ–∑ “õ–∞—É—ñ–ø—Å—ñ–∑–¥—ñ–∫ –ø–µ–Ω –∂“Ø–π–µ–ª—ñ–∫ “õ–æ—Ä“ì–∞–Ω—ã—Å“õ–∞ –º”ô–Ω –±–µ—Ä–µ—Å—ñ–∑.',
  '–°–∞–ø–∞–Ω—ã “õ–∞–º—Ç–∞–º–∞—Å—ã–∑ –µ—Ç—É': '–°—ñ–∑ –µ–≥–∂–µ–π-—Ç–µ–≥–∂–µ–π–≥–µ –Ω–∞–∑–∞—Ä –∞—É–¥–∞—Ä–∞—Å—ã–∑, —Å–∞–ø–∞ —Å—ñ–∑ “Ø—à—ñ–Ω –º–∞“£—ã–∑–¥—ã.',
};

const interestOptions = ['AI', 'Cloud', 'UX/UI', 'Security', 'DevOps'];

const CareerGuidance = () => {
  const [showModal, setShowModal] = useState(false);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [scores, setScores] = useState({});
  const [showResults, setShowResults] = useState(false);
  const [timer, setTimer] = useState(0);
  const [selectedInterest, setSelectedInterest] = useState('');

  useEffect(() => {
    let interval;
    if (showModal && !showResults) {
      interval = setInterval(() => setTimer(prev => prev + 1), 1000);
    }
    return () => clearInterval(interval);
  }, [showModal, showResults]);

  const handleAnswer = (field, points) => {
    setScores(prev => ({
      ...prev,
      [field]: (prev[field] || 0) + points,
    }));
    setTimeout(() => {
      if (currentQuestion + 1 < questions.length) {
        setCurrentQuestion(currentQuestion + 1);
      } else {
        setShowResults(true);
      }
    }, 300);
  };

  const resetTest = () => {
    setCurrentQuestion(0);
    setScores({});
    setShowResults(false);
    setTimer(0);
    setSelectedInterest('');
  };

  const totalScore = Object.values(scores).reduce((acc, val) => acc + val, 0);
  const sortedResults = Object.entries(scores)
    .map(([field, score]) => ({
      field,
      percentage: Math.round((score / totalScore) * 100),
    }))
    .sort((a, b) => b.percentage - a.percentage);
  const topField = sortedResults[0]?.field;
  const formatTime = sec => `${Math.floor(sec / 60)}:${('0' + (sec % 60)).slice(-2)}`;

  return (
    <>
      <Navbar />
      <div className={`relative ${showModal ? 'blur-sm pointer-events-none select-none' : ''}`}>
        <div className="max-w-7xl mx-auto px-6 py-16 space-y-12">
          <motion.h1
            initial={{ opacity: 0, y: -20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="text-4xl font-extrabold text-blue-900 text-center"
          >
            üéØ –ö”ô—Å—ñ–ø—Ç—ñ–∫ –±–∞“ì–¥–∞—Ä –±–µ—Ä—É
          </motion.h1>

          <motion.p
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.3 }}
            className="text-lg text-gray-700 text-center max-w-3xl mx-auto"
          >
            IT —Å–∞–ª–∞—Å—ã–Ω–∞ –±–∞“ì—ã—Ç –∞–ª—É “Ø—à—ñ–Ω ”©–∑ –±–µ–π—ñ–º–¥—ñ–ª—ñ–≥—ñ“£—ñ–∑–¥—ñ –∞–Ω—ã“õ—Ç–∞“£—ã–∑. “ö—ã—Å“õ–∞ —Ç–µ—Å—Ç—Ç–µ–Ω ”©—Ç—ñ–ø, –Ω”ô—Ç–∏–∂–µ–Ω—ñ –±—ñ–ª—ñ“£—ñ–∑.
          </motion.p>

          <div className="flex justify-center gap-4">
            <button
              onClick={() => setShowModal(true)}
              className="bg-green-600 text-white px-6 py-3 rounded-xl hover:bg-green-700 shadow-md transition"
            >
              üß™ –¢–µ—Å—Ç—ñ –±–∞—Å—Ç–∞—É
            </button>
            <a
              href="/"
              className="bg-blue-600 text-white px-6 py-3 rounded-xl hover:bg-blue-700 shadow-md transition"
            >
              ‚Üê –ë–∞—Å—Ç—ã –±–µ—Ç–∫–µ –æ—Ä–∞–ª—É
            </a>
          </div>

          <motion.img
            src={careerMap}
            alt="–ö–∞—Ä—Ç–∞"
            className="mx-auto rounded-xl border mt-12 shadow-lg"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.5 }}
          />

          <CareerMap />
        </div>
      </div>

      <AnimatePresence>
        {showModal && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 bg-black bg-opacity-60 flex items-center justify-center"
          >
            <motion.div
              initial={{ scale: 0.95 }}
              animate={{ scale: 1 }}
              exit={{ scale: 0.9 }}
              className="bg-white rounded-xl shadow-2xl max-w-2xl w-full p-6 relative overflow-y-auto max-h-[90vh]"
            >
              <button
                onClick={() => {
                  setShowModal(false);
                  resetTest();
                }}
                className="absolute top-3 right-3 text-gray-500 hover:text-red-500 text-xl"
              >
                ‚ùå
              </button>

              {!showResults ? (
                <>
                  <div className="mb-2 text-sm text-gray-500">‚è± –£–∞“õ—ã—Ç: {formatTime(timer)}</div>
                  <div className="mb-4">
                    <div className="text-sm text-blue-700 mb-1">
                      –°“±—Ä–∞“õ {currentQuestion + 1} / {questions.length}
                    </div>
                    <div className="w-full bg-gray-200 h-2 rounded-full overflow-hidden">
                      <div
                        className="bg-blue-500 h-full transition-all duration-300"
                        style={{
                          width: `${((currentQuestion + 1) / questions.length) * 100}%`,
                        }}
                      ></div>
                    </div>
                  </div>
                  <h3 className="text-xl font-semibold mb-3 text-blue-800">
                    {questions[currentQuestion].question}
                  </h3>
                  <div className="space-y-3">
                    {Object.entries(questions[currentQuestion].answers).map(([field, point]) => (
                      <motion.button
                        key={field}
                        whileTap={{ scale: 0.97 }}
                        whileHover={{ scale: 1.02 }}
                        onClick={() => handleAnswer(field, point)}
                        className="block w-full text-left bg-blue-50 hover:bg-blue-100 text-blue-800 px-4 py-2 rounded-md transition shadow-sm"
                      >
                        {field}
                      </motion.button>
                    ))}
                  </div>
                  <div className="mt-6">
                    <h4 className="font-medium mb-2">üìå “ö–æ—Å—ã–º—à–∞ “õ—ã–∑—ã“ì—É—à—ã–ª—ã“õ:</h4>
                    <div className="space-y-1">
                      {interestOptions.map(option => (
                        <label key={option} className="block text-sm">
                          <input
                            type="radio"
                            name="interest"
                            value={option}
                            checked={selectedInterest === option}
                            onChange={(e) => setSelectedInterest(e.target.value)}
                            className="mr-2"
                          />
                          {option}
                        </label>
                      ))}
                    </div>
                  </div>
                </>
              ) : (
                <div>
                  <h3 className="text-2xl font-bold text-green-700 mb-4">‚úÖ –ù”ô—Ç–∏–∂–µ</h3>
                  <p className="mb-2">
                    –°—ñ–∑–≥–µ –µ“£ “õ–æ–ª–∞–π–ª—ã –±–∞“ì—ã—Ç:{" "}
                    <span className="font-bold text-blue-800">{topField}</span>
                  </p>
                  <p className="text-gray-700 italic mb-4">
                    –ù–µ–ª—ñ–∫—Ç–µ–Ω: {explanations[topField]}
                  </p>
                  <div className="space-y-3">
                    {sortedResults.map(({ field, percentage }) => (
                      <div key={field}>
                        <div className="flex justify-between text-sm text-gray-700 mb-1">
                          <span>{field}</span>
                          <span className="font-semibold text-blue-700">{percentage}%</span>
                        </div>
                        <div className="w-full bg-gray-200 rounded-full h-3">
                          <div
                            className="bg-blue-500 h-3 rounded-full transition-all duration-500"
                            style={{ width: `${percentage}%` }}
                          />
                        </div>
                      </div>
                    ))}
                  </div>
                  <p className="text-sm text-gray-500 mt-4">
                    –¢–∞“£–¥–∞“ì–∞–Ω “õ—ã–∑—ã“ì—É—à—ã–ª—ã“ì—ã“£—ã–∑:{" "}
                    <span className="font-medium text-blue-600">
                      {selectedInterest || '—Ç–∞“£–¥–∞–ª–º–∞“ì–∞–Ω'}
                    </span>
                  </p>
                  <button
                    onClick={resetTest}
                    className="mt-6 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition"
                  >
                    “ö–∞–π—Ç–∞–¥–∞–Ω ”©—Ç—É üîÅ
                  </button>
                </div>
              )}
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
      <Footer />
    </>
  );
};

export default CareerGuidance;
